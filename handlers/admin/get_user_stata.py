from aiogram import types
from aiogram.dispatcher.filters import Text

from data.config import ADMINS_ID
from keyboards import interact_user, callback_interact
from loader import dp
from utils.db_commands import select_user, select_all_payments, select_all_subs, change_user_banned, delete_user
from utils.other import get_time_sub


@dp.message_handler(Text(startswith='/u'), user_id=ADMINS_ID)
async def get_user_stata(message: types.Message):
    try:
        user_id = int(message.text.split('/u')[1])
        user = await select_user(user_id)
        if user:
            payments = [payment.summa for payment in await select_all_payments(user_id)]
            subs_list = [f'‚Äì {sub.service}: ‚è≥ <code>{get_time_sub(sub.sub_seconds)}</code>' for sub in
                         await select_all_subs(user_id)]
            subs = '\n'.join(subs_list) if subs_list else '‚Äî –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'

            await message.answer(
                f'<a href="tg://user?id={user_id}"><b>üë§ {user.full_name}</b></a>\n\n'
                f'<b>üÜî:</b> <code>{user_id}</code>\n'
                f'<b>üíµ –ë–∞–ª–∞–Ω—Å:</b> <b>{user.balance} $</b>\n'
                f'üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: <b>{user.date.date()}</b>\n\n'
                f'üí≥ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π: <b>{sum(payments)} $</b>\n'
                f'üí≥ –ö–æ–ª-–≤–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π: <b>{len(payments)}</b>\n\n'
                f'<b>üåü –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏:</b>\n{subs}',
                reply_markup=interact_user(user_id, user.is_banned)
            )
        else:
            await message.answer(
                '<b>‚ùóÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ!</b>'
            )
    except ValueError:
        await message.answer('<b>‚ùóÔ∏è –ê—Ä–≥—É–º–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–æ–º!</b>')
    except IndexError:
        await message.answer('<b>‚ùóÔ∏è –î–æ–ª–∂–µ–Ω –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å 1 –∞—Ä–≥—É–º–µ–Ω—Ç!</b>')


@dp.callback_query_handler(callback_interact.filter(action='delete'), user_id=ADMINS_ID)
async def ban_user(call: types.CallbackQuery, callback_data: dict):
    user_id = int(callback_data['user_id'])
    await delete_user(user_id)
    await call.message.edit_text('‚ùó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω')


@dp.callback_query_handler(callback_interact.filter(action=['ban', 'unban']), user_id=ADMINS_ID)
async def ban_user(call: types.CallbackQuery, callback_data: dict):
    user_id, is_banned = int(callback_data['user_id']), bool(int(callback_data['is_banned']))
    await change_user_banned(user_id, not is_banned)
    await call.message.edit_reply_markup(reply_markup=interact_user(user_id, not is_banned))
    if is_banned:
        await call.message.reply('<b>üëç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</b>')
    else:
        await call.message.reply('<b>ü§Ø –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</b>')
